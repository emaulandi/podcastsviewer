import { useState } from 'react'
import './App.css'

import Modal from './components/Modal'

import data from './assets/podcasts_episodes_manual_update.csv'
import { podcastsConfig } from './config'
import Overtime from './components/Overtime'
import Footer from './components/Footer'
import Header from './components/Header'
import People from './components/People'
import EpisodesList from './components/EpisodesList'
import Gender from './components/Genders'

function App() {

  // Episodes
  const allEpisodes = data
    .filter(({ filterOut }) => parseInt(filterOut) !== 1)
    .sort((a, b) => a.date < b.date)

  // Podcasts
  const podcasts = [... new Set(allEpisodes.map(({ podcast }) => podcast))];
  
  // Categories
  const allCategoriesList = allEpisodes
    .map(({ category }) => category.split(','))
    .flat()
    .filter(category => category !== '');
  const allCategories = [... new Set(allCategoriesList)]; // unique
  const categoryOccurence = allCategoriesList.reduce(function (acc, curr) {
    return acc[curr] ? ++acc[curr] : acc[curr] = 1, acc
  }, {});
  const sortedCategories = Object.entries(categoryOccurence)
    .sort((a,b) => a[1] < b[1]) // [key, value] -> sorting by value
    .map(([key]) => key);

  // Guests
  const allGuests = allEpisodes
    .filter(({ category, guest }) => category != 't√©moignage' && guest !== "")
    .map(({ guest }) => guest.split(','))
    .flat();
  const guestsOccurence = allGuests.reduce(function (acc, curr) {
    return acc[curr] ? ++acc[curr] : acc[curr] = 1, acc
  }, {});
  const famousGuests = Object.entries(guestsOccurence)
    .filter(([, value]) => value > 1)
    .sort((a,b) => a[1] < b[1])
    .map(([key]) => key);

  // State
  const [categories, setCategories] = useState(allCategories);
  const [guests, setGuests] = useState(allGuests);
  const [episodeInModal, setEpisodeInModal] = useState({});

  const episodes = allEpisodes
  .filter(({ category, guest }) =>
    categories.some(c => category.split(',').includes(c))
    && (
      // only one guest selected ? strict filter
      guests.length === 1
        ? guests.some(g => guest.split(',').includes(g))
        : guest === '' || guests.some(g => guest.split(',').includes(g))
    )
  );

  const podcastChip = title => (
    <span className="podcast" key={title} style={{ backgroundColor: podcastsConfig[title].color }}>
      <a style={{ fontWeight: 400, color: 'inherit', textDecoration: 'inherit' }} target='_blank' rel="noreferrer" href={podcastsConfig[title].link}>
        {title}
      </a>
    </span>
    
  );
  const podcastsChips = (
    <div className="podcasts">
      {podcasts.map(p => (
        <div key={p} style={{ margin: '0.3em' }}>
          {podcastChip(p)}
        </div>
      ))}
    </div>
  );

  const detailClick = (
    <p style={{ fontWeight: 300, fontStyle: 'italic'}}>Il est possible de voir le d√©tail d'un √©pisode en cliquant dessus</p>
  );

  const separator = (
    <p style={{ fontWeight: 300, padding: '1em' }}>üéß</p>
  );

  return (
    <>
      <Header/>
      <Modal episode={episodeInModal} onClose={() => setEpisodeInModal({})}/>
      <div className='container'>
        <section id="intro">
          <div className='textContainer'>
            <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut vel neque imperdiet, dictum neque vel, tincidunt ipsum. Mauris condimentum, enim a lobortis dapibus, mauris diam gravida ipsum, sit amet rutrum enim felis faucibus est. Donec non sapien bibendum, consequat sapien ornare, convallis nisl. Aenean nec tellus malesuada, convallis magna vel, ornare sapien. Morbi mauris nunc, tempor ut nisl sed, pellentesque dapibus lectus. Nam mollis magna sit amet sem dapibus ornare. Pellentesque aliquam dolor sed ullamcorper finibus.
            </p>

            {podcastsChips}

            <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut vel neque imperdiet, dictum neque vel, tincidunt ipsum. Mauris condimentum, enim a lobortis dapibus, mauris diam gravida ipsum, sit amet rutrum enim felis faucibus est. Donec non sapien bibendum, consequat sapien ornare, convallis nisl. Aenean nec tellus malesuada, convallis magna vel, ornare sapien. Morbi mauris nunc, tempor ut nisl sed, pellentesque dapibus lectus. Nam mollis magna sit amet sem dapibus ornare. Pellentesque aliquam dolor sed ullamcorper finibus.
            </p>
            <p>
            Les podcasts {podcastChip('Pr√©sages')} et {podcastChip('Sismique')} ont tous deux d√©marr√©s en 2018,
            suivi de {podcastChip('Oz√©. Comprendre. S\'inspirer. S\'engager')} et {podcastChip('Plan(s) B')} en 2020 (beaucoup d'√©pisodes du podcast
            Plan(s) B ont √©t√© ajout√©s en avril 2021, peut-√™tre ont-ils √©t√© ajout√©s d'un coup sur Spotify et sont plus anciens).
            </p>

            <p>
              Voici ci-dessous une petite frise par ann√©e des √©pisodes publi√©s repr√©sent√©s par un carr√© de la couleur associ√©e
              au podcast, une ligne repr√©sentant un mois.
            </p>

            {detailClick}
          </div>

          <div style={{ display: 'flex', justifyContent: 'center' }}>
            <div className="figure">
              <Overtime
                episodes={allEpisodes}
                onEpisodeClick={episode => setEpisodeInModal(episode)}
              />
            </div>
          </div>
        </section>

        <section id="people">
          {separator}
          <div className='textContainer'>
            <h2>Les petits chouchous</h2>
            <p>
            Plusieurs invit√©¬∑e¬∑s apparaissent dans plus d&apos;un podcast ! Serait-ce la <i>fame</i>, leur approche transdisciplinaire ou le fait
            qu'iels traitent des sujets phares ? 
            √Ä vous de vous faire une id√©e ü§ì. 
            </p>
            {detailClick}
          </div>
          <div style={{ display: 'flex', justifyContent: 'center' }}>
            <People 
              allEpisodes={allEpisodes}
              famousGuests={famousGuests}
              onEpisodeClick={episode => setEpisodeInModal(episode)}
            />
          </div>

          <div className='textContainer'>
            <p>
              On a vu au dessus la liste des √©pisodes concern√©s pour les invit√©¬∑e¬∑s que l'on peut √©couter sur 3 ou 4 podcats. Pas d'inqui√©tudes pour les autres,
              il sera possible d'explorer un peu plus bas l'ensemble des √©pisodes par invit√©¬∑e.
            </p>
          </div>
        </section>

        <section id="topics">
          {separator}
          <div className='textContainer'>
            <h2>Des approches compl√©mentaires ?</h2>
            <p>
              J'imagine que l'on s√©lectionne chacun¬∑e des ressources qui nous parlent dans le contenu, l'approche <i>(tout en gardant
              l'importance de se confronter √† des id√©es diff√©rentes)</i>. Ces quatre podcasts sont √† mon sens assez compl√©mentaires.
              Je suis plus attir√©e par d√©faut vers la posture et l'angle de vue {podcastChip('Pr√©sages')} qui d√©peind les sujets plut√¥t
              depuis un regard li√©s aux rapports de pouvoirs et aux luttes. Ce n'est pas forc√©ment la tasse de th√© üçµ de certains milieux
              mobilisant principalement les lunettes des sciences "dures" sans trop regarder du c√¥t√© des sciences sociales. Pour autant,
              je trouve la conjonction des deux beaucoup plus compl√®te et riche !
            </p>
            <p>
              Un cas qui ma marqu√© est l'√©coute de l'√©pisode de {podcastChip('Sismique')} avec <a target='_blank' rel="noreferrer" href='https://open.spotify.com/episode/1LfZAWZAVFM529fssZMxWd
'>Serge Zaka sur climat et agriculture</a>. Marqu√©e par la lecture juste
              avant de Rendre la terre aux machines de l'Atelier Paysan, je m'√©nervais toute seule en ma ngeant mon go√ªter : <i>"Mais il ne 
              parle pas des diff√©rents types d'agricultures ! Et du rapport aux fournisseurs de l'industrie agricole, et des autres impacts
              sur l'environnement et gnagnagna !"</i>. Disclaimer : je ne suis pas du tout une experte du sujet et j'ai forc√©ment un point de
              vue tr√®s partiel du sujet (surement beaucoup plus que les intervenant¬∑e¬∑s dans ces podcats !). Mais cela √©tant dit, je suis all√©e
              voir le dernier √©pisodes de  {podcastChip('Pr√©sages')} sur le sujet vaste de l'alimentation et j'ai trouv√© tellement riche l'√©pisode
              avec <a target='_blank' rel="noreferrer" href='https://open.spotify.com/episode/0EyrFqnCrcSQi0PEwd2esL'>l'association Les Greniers d'abondance</a>, 
              qui ajoute un point de vue diff√©rent et plus global √† mon sens. <i>(Et pour des ressources encore plus vari√©es, 
              rendez-vous plus bas pour lister tous les √©pisodes li√©s au sujet de l'alimentation).</i>
            </p>
            <p>
              C'est un rappel pour moi (et vous ?) de continuer √† √©couter / lire des contenus proche et moins proche de mon point de vue intial
              pour construire un regard plus englobant et se familiariser avec des mani√®res de voir dff√©rentes, m√™me si on ne les adopte pas forc√©ment.
            </p>
          </div>
        </section>

        <section id="crosspodcast">
        {separator}
          <div className='textContainer'>
            <h2>Cr√©ateurs de podcasts ... aussi invit√©s de podcasts</h2>
            <p>
            Petit bonus fun de fin, les cr√©ateurs de {podcastChip('Sismique')} et {podcastChip('Oz√©. Comprendre. S\'inspirer. S\'engager')}
            ont √©t√© invit√©s sur {podcastChip('Plan(s) B')}. On a √©galement un √©pisode du podcast {podcastChip('Oz√©. Comprendre. S\'inspirer. S\'engager')} 
            o√π l'invit√© est le cr√©ateur de {podcastChip('Sismique')}.
            </p>
            <p>
            Je voudrais bien voir un jour la cr√©atrice de {podcastChip('Pr√©sages')} invit√©e √©galement <i>(m√™me si elle n'a pas - encore ? - √©crit de livre
            √† l'inverse des deux autres).</i>
            </p>
          </div>
        </section>

        <section id="gender">
          {separator}
          <div className='textContainer'>
            <h2>Petit appart√© sur la repr√©sentativit√© des invit√©¬∑e¬∑s</h2>
            <p>
                Il y a telelment d'aspect de repr√©sentativit√© qu'il serait int√©ressant d'explorer ! Sur l'√¢ge des invit√©¬∑e¬∑s, leurs
                professions et domaines d'activit√© ou leurs nationalit√©s. Il reste un aspect qui est aussi pertinent et plus simple
                √† regarder : le genre des invit√©¬∑e¬∑s.
            </p>
            <p>
                Alors, a-t-on des femmes invit√©es dans ces podcasts ?
            </p>
            <Gender allEpisodes={allEpisodes} />
            <p>
            {podcastChip('Oz√©. Comprendre. S\'inspirer. S\'engager')} et {podcastChip('Pr√©sages')}
                se d√©marquent largement avec plus de 40% de femmes invit√©es. Note : pour Oz√©, un certain nombre d'√©pisodes sont de type "t√©moignages"
                pour relater le parcours des invit√©¬∑e¬∑s et sont peut-√™tre moins orient√© expertise <i>(ces √©pisodes sont des fois indiqu√©s avec la mention #Parcours
                dans le titre)</i>
            </p>
            
          </div>
          
        </section>

        <section id="explore">
          {separator}
          <h1>Explorez les podcasts</h1>

          <div className='textContainer'>
            <p>√Ä vous d'explorer maintenant ! Il est possible de filtrer par th√®me et par invit√©¬∑e.</p>
          </div>
          <p>Podcasts list√©s : </p>
          {podcastsChips}

          {detailClick}

          <div className='textContainer'>
            <p>
              La cat√©gorisation par th√®me est ici tout √† fait subjective et toujours en cours. Le sujet <b>alimentation</b> est chapeau pour
              les sujets d'agriculture par exemple. Le th√®me <b>int√©riorit√©</b> par de ce qui nous traverse, nos doutes, nos biais et nos mani√®res
              d'exp√©rimenter le monde. Les <b>luttes</b> englobent la perspectives qui questionnent les rapports de pouvoirs.
            </p>
            <p>
              Un √©pisode peut bien s√ªr √™tre li√© √† plusieurs th√®mes. Le fichier original et la cat√©gorisation sont accessible sur github (voir bas de page).
            </p>
          </div>
          
          <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>
            <h2>üìë Th√®mes</h2>
            <button style={{ fontStyle: 'italic', fontWeight: 300 }} onClick={() => setCategories(allCategories)}>
              S√©lectionnez toutes les cat√©gories
            </button>
          </div>
          <div className="filters">
            {sortedCategories.map(c => (
              <div className="chip" key={c} style={{ fontWeight: categories.includes(c) ? 900 : 300}}>
                <button onClick={() => setCategories([c])}>
                  {c}
                </button>
              </div>
            ))}
          </div>
          
          <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>
            <h2>üôãüèº‚Äç‚ôÄÔ∏è Invit√©¬∑e¬∑s les plus repr√©sent√©¬∑e¬∑s</h2>
            <button style={{ fontStyle: 'italic', fontWeight: 300 }} onClick={() => setGuests(allGuests)}>
              S√©lectionnez l&apos;ensemble des invit√©.e.s
            </button>
          </div>
          <div className="filters">
            {famousGuests.map(g => (
              <div className="chip" key={g} style={{ fontWeight: guests.includes(g) ? 900 : 300}}>
                <button onClick={() => setGuests([g])}>
                  {g}
                </button>
              </div>
            ))}
          </div>

          <h2>Episodes</h2>
          {episodes.length === 0 && (
            <p>ü•≤ Aucun √©pisode ne correspond aux filtres s√©lectionn√©s</p>
          )}
          <EpisodesList
            episodes={episodes}
            onEpisodeClick={episode => setEpisodeInModal(episode)}
          />
        </section>
      </div>

      <Footer />
    </>
  )
}

export default App
